openapi: 3.0.3
info:
  title: Lens of Truth API
  version: 1.0.0
servers:
- url: /
paths:
  /api/claims/:
    get:
      tags:
      - api
      description: REST endpoints for viewing and submitting claims
      operationId: api_claims_list
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
    post:
      tags:
      - api
      description: REST endpoints for viewing and submitting claims
      operationId: api_claims_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Claim'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Claim'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Claim'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
  /api/claims/{id}:
    get:
      tags:
      - api
      operationId: api_claim_detail
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this claim.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimWithEvidence'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
    put:
      tags:
      - api
      operationId: api_claims_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this claim.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimWithEvidence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClaimWithEvidence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClaimWithEvidence'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimWithEvidence'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
    patch:
      tags:
      - api
      operationId: api_claims_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this claim.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClaimWithEvidence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClaimWithEvidence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClaimWithEvidence'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimWithEvidence'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
  /api/entities/:
    get:
      tags:
      - api
      description: REST endpoints for viewing and submitting entities
      operationId: api_entities_list
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
    post:
      tags:
      - api
      description: REST endpoints for viewing and submitting entities
      operationId: api_entities_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Entity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Entity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
  /api/entities/{id}:
    get:
      tags:
      - api
      operationId: api_entity_detail
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this entity.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
    put:
      tags:
      - api
      operationId: api_entities_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this entity.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Entity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Entity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
    patch:
      tags:
      - api
      operationId: api_entities_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this entity.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEntity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEntity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEntity'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
  /api/evidence/:
    get:
      tags:
      - api
      description: REST endpoints for viewing and submitting claims
      operationId: api_evidence_list
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evidence'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
    post:
      tags:
      - api
      description: REST endpoints for viewing and submitting claims
      operationId: api_evidence_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evidence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Evidence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Evidence'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evidence'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
  /api/evidence/{id}:
    get:
      tags:
      - api
      operationId: api_evidence_detail
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this evidence.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evidence'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
    put:
      tags:
      - api
      operationId: api_evidence_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this evidence.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evidence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Evidence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Evidence'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evidence'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
    patch:
      tags:
      - api
      operationId: api_evidence_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this evidence.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvidence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvidence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvidence'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evidence'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
  /api/sources/:
    get:
      tags:
      - api
      description: REST endpoints for viewing and submitting sources
      operationId: api_sources_list
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Source'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
    post:
      tags:
      - api
      description: REST endpoints for viewing and submitting sources
      operationId: api_sources_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Source'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Source'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
  /api/sources/{id}:
    get:
      tags:
      - api
      operationId: api_source_detail
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this source.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
    put:
      tags:
      - api
      operationId: api_sources_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this source.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Source'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Source'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
    patch:
      tags:
      - api
      operationId: api_sources_partial_update
      parameters:
      - name: id
        in: path
        description: A unique integer value identifying this source.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
components:
  schemas:
    Claim:
      required:
      - claim_text
      - id
      - source_of_claim
      - topic
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        claim_text:
          maxLength: 200
          type: string
        description:
          type: string
        topic:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Topic'
        source_of_claim:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Source'
    ClaimWithEvidence:
      required:
      - claim_text
      - id
      - related_evidence
      - source_of_claim
      - topic
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        claim_text:
          maxLength: 200
          type: string
        description:
          type: string
        topic:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Topic'
        source_of_claim:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Source'
        related_evidence:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Evidence'
    Entity:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 100
          type: string
        description:
          type: string
    Evidence:
      required:
      - community_consensus_relationship
      - expert_consensus_relationship
      - id
      - num_community_reviews
      - num_expert_reviews
      - source_of_evidence
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        source_of_evidence:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Source'
        description:
          type: string
        expert_consensus_relationship:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/EvidenceRelationship'
        num_expert_reviews:
          type: integer
          readOnly: true
        community_consensus_relationship:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/EvidenceRelationship'
        num_community_reviews:
          type: integer
          readOnly: true
    EvidenceRelationship:
      type: string
      enum:
      - PROVES
      - SUPPORTS
      - UNRELATED
      - INCONCLUSIVE
      - DISPUTES
      - DISPROVES
      - SPLIT
    PatchedClaimWithEvidence:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        claim_text:
          maxLength: 200
          type: string
        description:
          type: string
        topic:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Topic'
        source_of_claim:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Source'
        related_evidence:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Evidence'
    PatchedEntity:
      type: object
      properties:
        name:
          maxLength: 100
          type: string
        description:
          type: string
    PatchedEvidence:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        source_of_evidence:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Source'
        description:
          type: string
        expert_consensus_relationship:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/EvidenceRelationship'
        num_expert_reviews:
          type: integer
          readOnly: true
        community_consensus_relationship:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/EvidenceRelationship'
        num_community_reviews:
          type: integer
          readOnly: true
    PatchedSource:
      type: object
      properties:
        title:
          maxLength: 250
          type: string
        url:
          maxLength: 200
          type: string
          format: uri
        summary:
          type: string
        source_degree:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/SourceDegreeEnum'
        authors:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Entity'
        date_published:
          type: string
          format: date
          nullable: true
        date_retrieved:
          type: string
          format: date-time
          readOnly: true
    Source:
      required:
      - authors
      - date_retrieved
      type: object
      properties:
        title:
          maxLength: 250
          type: string
        url:
          maxLength: 200
          type: string
          format: uri
        summary:
          type: string
        source_degree:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/SourceDegreeEnum'
        authors:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Entity'
        date_published:
          type: string
          format: date
          nullable: true
        date_retrieved:
          type: string
          format: date-time
          readOnly: true
    SourceDegreeEnum:
      type: string
      enum:
      - ORIGINAL
      - PRIMARY
      - SECONDARY
      - TERTIARY
    Topic:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 100
          type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      name: Session
      in: cookie
